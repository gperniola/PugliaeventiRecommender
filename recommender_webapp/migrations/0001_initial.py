# Generated by Django 2.1.5 on 2019-01-26 07:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import recommender_webapp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', recommender_webapp.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Comune',
            fields=[
                ('istat', models.CharField(max_length=7, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=100)),
                ('provincia', models.CharField(max_length=3)),
                ('regione', models.CharField(max_length=4)),
                ('prefisso', models.CharField(max_length=6)),
                ('cap', models.CharField(max_length=6)),
                ('cod_fis', models.CharField(max_length=6)),
                ('abitanti', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Distanza',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cittaA', models.CharField(max_length=100)),
                ('cittaB', models.CharField(max_length=100)),
                ('distanza', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('eventId', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.TextField()),
                ('location', models.CharField(blank=True, max_length=40)),
                ('date_from', models.DateField()),
                ('date_to', models.DateField()),
                ('popularity', models.IntegerField()),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('placeId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=40)),
                ('freeEntry', models.BooleanField()),
                ('bere', models.BooleanField()),
                ('mangiare', models.BooleanField()),
                ('benessere', models.BooleanField()),
                ('dormire', models.BooleanField()),
                ('goloso', models.BooleanField()),
                ('libri', models.BooleanField()),
                ('romantico', models.BooleanField()),
                ('museo', models.BooleanField()),
                ('spiaggia', models.BooleanField()),
                ('teatro', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=40)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('profession', models.CharField(blank=True, max_length=40)),
                ('empathy', models.FloatField(blank=True, null=True)),
                ('first_configuration', models.BooleanField(default=False)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('mood', models.CharField(choices=[('angry', 1), ('joyful', 2), ('sad', 3)], max_length=20)),
                ('companionship', models.CharField(choices=[('withFriends', 1), ('alone', 2)], max_length=20)),
                ('rating', models.IntegerField(default=3)),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='recommender_webapp.Place')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='recommender_webapp.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='SampleRating',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('userId', models.IntegerField()),
                ('rating', models.IntegerField()),
                ('placeId', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='recommender_webapp.Place')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='place',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='recommender_webapp.Place'),
        ),
        migrations.AlterUniqueTogether(
            name='samplerating',
            unique_together={('userId', 'placeId')},
        ),
    ]
